{
	"acceptPrps": {},
	"scope": "treeview",
	"type": "treeview",
	"traits": [
		{
			"trait": "./functional/staticData"
		}
	],
	"prps": {
		"dtaAtr": "id",
		"disAtr": "name",
		"patAtr": "parentId",
		"childAtr": "children",
		"hideRootNode": true,
		"autoExpand": true,
		"renderExpander": false,
		"mdaLabel": {
			"id": "((rowData.id))label",
			"type": "container",
			"traits": [
				{
					"trait": "./functional/handleBackgroundColorBehaviour",
					"traitPrps": {
						"rowData": "{{rowData}}"
					}
				},
				{
					"trait": "./functional/handleDropDownBehaviour",
					"traitPrps": {
						"rowData": "{{rowData}}"
					}
				}
			],
			"prps": {
				"canClick": true,
				"canHover": true
			},
			"wgts": [
				{
					"id": "((rowData.id))inner",
					"traits": [
						{
							"trait": "./visual/iconAndLabel",
							"traitPrps": {
								"rowData": "{{rowData}}"
							}
						}
					]
				}
			]
		},
		"scps": [
			{
                "id": "sS",
                "triggers": [
                    {
                        "event": "onMount"
                    },
                    {
                        "event": "onStateChange",
                        "source": "||router||",
                        "key": "onRoute",
                        "match": [
                            {
                                "operator": "isTruthy",
                                "value": "{{state.||router||.onRoute}}"
                            }
                        ]
                    }
                ],
                "actions": [
                    {
                        "type": "setVariable",
                        "name": "parentRecord",
                        "value": [
                            "{{eval.",
                            "    const urlParams = new URLSearchParams(window.location.search);",
                            "    const selectedArticleId = urlParams.get('articleId');",
                            "    let res = ({{state.self.data.children}} ?? []).find(d => d.children.some(f => f.dataFile === selectedArticleId) );",
                            "    if (!res)",
                            "        res = {{state.self.data.children.0}};",
                            "    res;",
                            "}}"
                        ],
                        "inlineKeys": [
                            "value"
                        ]
                    },
                    {
                        "id": "sSM",
                        "type": "morphIterateArray",
                        "value": "{{eval.JSON.parse(JSON.stringify({{state.self.expandedNodes}}) )}}",
                        "chain": [
                            {
                                "actionCondition": {
                                    "operator": "isNotEqual",
                                    "value": "{{sSM.variable.record}}",
                                    "compareValue": "{{sSM.scopedVariable.parentRecord.dataFile}}"
                                },
                                "type": "setState",
                                "target": "||treeview||",
                                "key": "tToggleParent",
                                "value": "{{eval.{{state.self.staticData}}.find(f => f.id === {{variable.record}})}}"
                            }
                        ]
                    },
                    {
                    	"actionCondition": {
                            "operator": "isFalsy",
                            "value": "{{sS.eval.{{sS.state.self.expandedNodes}}.includes({{sS.variable.parentRecord.id}})}}"
                        },
                    	"type": "setState",
                        "key": "tToggleParent",
                        "value": "{{variable.parentRecord}}"
                    }
                ]
            }
		]
	}
}